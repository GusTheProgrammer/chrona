name: Docker Image Publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SMTP_SERVER: smtp.host.com
  SMTP_PORT: 465
  SMTP_USER: user@host.com
  SMTP_KEY: ${{ secrets.SMTP_KEY }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  NEXT_PUBLIC_API_URL: "https://chrona.me/api"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .env file
        run: |
          echo "SMTP_SERVER=${{ env.SMTP_SERVER }}" >> .env
          echo "SMTP_PORT=${{ env.SMTP_PORT }}" >> .env
          echo "SMTP_USER=${{ env.SMTP_USER }}" >> .env
          echo "SMTP_KEY=${{ env.SMTP_KEY }}" >> .env
          echo "JWT_SECRET=${{ env.JWT_SECRET }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}" >> .env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Setup Docker buildxo use for the build. The cache is used to speed up the build process.
        uses: docker/setup-buildx-action@v2

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,prefix=main,value=latest
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: "."
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
