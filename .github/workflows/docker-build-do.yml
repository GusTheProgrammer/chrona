name: Build, Test, and Publish
on:
  pull_request:
    branches: ["main"]

env:
  DO_REGISTRY: registry.digitalocean.com/chrona-registry
  GH_REGISTRY: ghcr.io/gustheprogrammer
  IMAGE_NAME: chrona-app
  NEXT_PUBLIC_API_URL: "https://chrona.me/api"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run Jest Tests
        run: npm test

  build_image:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.semver.outputs.minor }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get next minor version
        id: semver
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ github.event.pull_request.head.ref }}

      - name: Setup .env file
        run: |
          echo NEXT_PUBLIC_API_URL="${NEXT_PUBLIC_API_URL}" >> .env

      - name: Build Docker image
        run: docker build -t ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.minor }} .

  push_images_and_release:
    needs: build_image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DO Container Registry
        run: docker push ${{ env.DO_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Push image to GHCR
        run: docker push ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build_image.outputs.new_version }}

      - name: Create release
        uses: actions/github-script@v6
        with:
          script: |
            const releaseResponse = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ needs.build_image.outputs.new_version }}',
              name: 'Release ${{ needs.build_image.outputs.new_version }}',
              body: 'Docker Image: ghcr.io/${{ env.IMAGE_NAME }}:${{ needs.build_image.outputs.new_version }}'
            });
